区分 run  cmd  entrypoint
	run  执行命令并创建新的镜像曾，run经常用于安装软件包
	cmd	 设置容器启动后默认执行的命令及参数，但cmd能够被docker  run 后面跟的命令行参数替换。
	entrypoint  配置容器启动时运行的命令
	
	
	##ENTRYPOINT 中的参数始终会被使用，而CMD的额外参数可以再容器启动时动态替换掉。
		docker  run  的  --entrypoint  可以覆盖Dockerfile中ENTRYPOINT设置的命令。
	
	
	exec格式用法
	ENTYRYPOINT ["top","-b","-H"]
	即JSON风格["command","arg1"]
	
	shell 格式用法    	在容器中执行时自动调用shell，自动在命令前追加/bin/sh -c 
	ETRYPOINT top -b -H
	这种格式禁止追加任何蚕食，即CMD指令或docker run ... <command>都将忽略
	
	
	##CMD 指令
	执行docker run 如果带有其他命令参数，将会会覆盖CMD指令。
	exec用法	JSON风格 
	1.CMD["echo","hello","world"] 
	2.这种格式在容器执行时不会调用任何Shell，即不会进行变量替换。要进行shell处理，需要将sh直接加到命令中
		CMD["sh", "-c", "echo $HOME"]
	3.当CMD指令为ENTRYPOINT的追加参数时
		CMD["-c", "echo world"]
	
	总结：ENTRYPOINT指令，往往用于设置容器启动后的第一个指令，这对一个容器来说往往是固定的。
		  CMD指令，往往用于设置容器启动的第一个默认参数，这对ige容器来说是可以变化的。
		  docker run <command>  往往用于给出替换CMD的临时参数。
	
	
	